name: Build and debug

on: push

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    name: Compile source files
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Get cached ALGLIB object files
        id: alglib-cache
        uses: actions/cache@v4
        with:
          key: ALGLIB-${{ matrix.os }}-${{ hashFiles('extern/alglib-cpp/**') }}
          path: build/*.o

      - name: Display hardware info (ubuntu-latest)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: lscpu

      - name: Display hardware info (windows-latest)
        if: ${{ matrix.os == 'windows-latest' }}
        run: systeminfo

      - name: Compile ALGLIB (ubuntu-latest)
        if: ${{ matrix.os == 'ubuntu-latest' && steps.alglib-cache.outputs.cache-hit != 'true' }}
        run: scripts/build.sh alglib

      - name: Compile ALGLIB (windows-latest)
        if: ${{ matrix.os == 'windows-latest' && steps.alglib-cache.outputs.cache-hit != 'true' }}
        run: scripts\build alglib

      - name: Compile to executable in debug mode (ubuntu-latest)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: scripts/build.sh debug

      - name: Compile to executable in debug mode (windows-latest)
        if: ${{ matrix.os == 'windows-latest' }}
        run: scripts\build debug

      - name: Upload executable
        uses: actions/upload-artifact@v4
        with:
          name: executable-${{ matrix.os }}
          path: build/main.exe

  test-ubuntu:
    name: Run in debug mode
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        problem: ["6.5.1", "6.20.4", "10.5.1", "10.20.4", "20.20.4", "50.10.1"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Download executable
        uses: actions/download-artifact@v4
        with:
          name: executable-${{ matrix.os }}
          path: build/

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install gdb (ubuntu-latest)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt update
          sudo apt install gdb -y

      - name: Initialize working space (ubuntu-latest)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          mkdir result
          chmod +x build/main.exe

      - name: Run executable in debug mode (ubuntu-latest)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: out=$(python scripts/in.py ${{ matrix.problem }} -v) && echo "$out" | time -p gdb --command=scripts/gdb.txt --return-child-result build/main.exe

      - name: Run executable in debug mode (windows-latest)
        if: ${{ matrix.os == 'windows-latest' }}
        run: python scripts/in.py ${{ matrix.problem }} -v | gdb --command=scripts/gdb.txt --return-child-result build\main
