name: Run algorithm

on: push

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    name: Compile source files
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Get cached ALGLIB object files
        id: alglib-cache
        uses: actions/cache@v4
        with:
          key: ALGLIB-ubuntu-latest-${{ hashFiles('extern/alglib-cpp/**') }}
          path: build/*.o

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Compile ALGLIB
        if: ${{ steps.alglib-cache.outputs.cache-hit != 'true' }}
        run: scripts/build.sh alglib

      - name: Compile in profile mode
        run: scripts/build.sh profile-generate

      - name: Run in profile mode
        run: python scripts/in.py 50.40.4 | time -p build/main.exe

      - name: Compile in release mode
        run: scripts/build.sh profile-use

      - name: Upload executable
        uses: actions/upload-artifact@v4
        with:
          name: executable
          path: build/main.exe

  solve:
    name: Run algorithm
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        prefix: ["20.5", "20.10", "20.20", "50.10", "50.20", "50.30", "50.40", "100.10", "100.20", "100.30", "100.40"]
        steps: [0, 1]
        tabu-size-factor: [0, 1, 2]
        strategy: [random, cyclic, vns]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Download executable
        uses: actions/download-artifact@v4
        with:
          name: executable
          path: build/

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Initialize working space
        run: |
          mkdir result
          chmod +x build/main.exe

      - name: Run algorithm
        run: |
          exitcode=0
          set +e
          let begin=5*${{ matrix.steps }}+1
          let end=$begin+4

          report_error() {
            this_exitcode=$?

            if [ $this_exitcode -ne 0 ]
            then
              echo "::warning::Exit code $this_exitcode at run #$i"
              exitcode=1
            fi
          }

          for problem in problems/data/${{ matrix.prefix }}.*.txt
          do
            problem=$(basename -s .txt $problem)
            for i in $(seq $begin $end)
            do
              echo "RUN #$i"
              python scripts/in.py $problem \
              --tabu-size-factor ${{ matrix.tabu-size-factor }} \
              --fix-iteration 10000 \
              --strategy ${{ matrix.strategy }} > input.txt
              report_error

              cat input.txt | build/main.exe > input2.txt
              report_error

              cat input2.txt | python scripts/out.py $problem --url "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
              report_error
            done
          done

          exit $exitcode

      - name: Upload results
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: solution-${{ matrix.prefix }}-${{ matrix.steps }}-${{ matrix.tabu-size-factor }}-${{ matrix.strategy }}
          path: result/*

  summary:
    name: Summarize results
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: solve

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download results
        uses: actions/download-artifact@v4
        with:
          path: result/
          pattern: solution-*
          merge-multiple: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Summarize results
        run: python scripts/summary.py

      - name: Upload summary table
        uses: actions/upload-artifact@v4
        with:
          name: summary-csv
          path: result/summary.csv

      - name: Upload summary and all results
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: summary
          path: result/*
